#!/usr/bin/perl -w
# 
# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only
# 

use strict;
use Net::SMTP;
use Getopt::Long;
use Pod::Usage;

my ($opt_help, $opt_verbose, $opt_server, @opt_recipients, $opt_sender);

GetOptions("help" => \$opt_help,
	   "verbose" => \$opt_verbose,
	   "address=s" => \$opt_server,
	   "recipients=s" => \@opt_recipients,
	   "sender=s" => \$opt_sender) || pod2usage(2);

pod2usage(1) if ($opt_help);
pod2usage(-msg => "No SMTP server specified") if (!defined($opt_server));
pod2usage(-msg => "No recipients option specified") if ($#opt_recipients < 0);
$opt_sender = "" if (!defined($opt_sender));

pod2usage(-msg => "No input files specified") if ($#ARGV < 0);

my @recipients = ();
foreach my $ropt (@opt_recipients) {
    if ($ropt =~ /^@/) {
        $ropt =~ s/^@//g;
        open(RECIPIENTS, $ropt) || die("could not open: $ropt");
        while (<RECIPIENTS>) {
            chomp;
            push @recipients, $_;
        }
        close(RECIPIENTS);
    } else {
        push(@recipients, $ropt);
    }
}

my $smtp = Net::SMTP->new("$opt_server") || die;
$smtp->debug($opt_verbose);

for (my $i = 0; $i <= $#ARGV; $i++) {
	$smtp->reset();
	$smtp->mail("<$opt_sender>") || die($smtp->message());
	foreach my  $recipient (@recipients) {
	    if ($smtp->to("<$recipient>")) {
		print "OK: $recipient\n";
	    } else {
		print "FAIL: $recipient: ", $smtp->message();
	    }
	}
	$smtp->data();
	open(DATA, $ARGV[$i]) || die($ARGV[$i] . ": $!");
	while (<DATA>) {
	    $smtp->datasend($_);
	}
    close(DATA);
}
$smtp->dataend();

__END__

=head1 NAME

    smtpclient - since telnet to port 25 gets old after a while

=head1 SYNOPSUS

    smtpclient [options] [datafile ...]

      Options:

        -h --help        usage message
        -a --address     SMTP server name or address
        -r --recipients  file containing envelope recipient email address
        -s --sender      enveloper sender email address
        -v --verbose     show SMTP transaction

=head1 OPTIONS

=over 8

=item B<--help>

Prints a brief help message and exits.

=item B<--address>

Name or address of SMTP server to send message through.  This option
must be specified.  You can also specify host:port if you need to
connect to a different port.

=item B<--recipient>

Envelope recipient address.  Specify it without the angle brackets <>.
For multiple recipients, repeat this option on the command line.  This
option must occur atleast once.

=item B<--sender>

Envelope sender address.  Optional, defaults to <>.

=item B<--verbose>

Debug output of SMTP transaction.

=item B<datafile>

A message with DATA from datafile is sent for each datafile specified.

=back

=head1 DESCRIPTION

This program connects to a SMTP server, and sends a message per
envelope arguments -r and -s.

=cut

